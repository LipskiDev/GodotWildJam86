[gd_scene load_steps=8 format=3 uid="uid://b7517a6cp3rr6"]

[ext_resource type="Texture2D" uid="uid://b7qv86fkyk51k" path="res://assets/textures/grass-foliage.png" id="1_dwd0w"]
[ext_resource type="Script" uid="uid://crlxlb6r7sc2i" path="res://entities/objects/grass_foliage.gd" id="1_iovlq"]

[sub_resource type="Shader" id="Shader_iovlq"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.5.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_burley, specular_schlick_ggx, depth_prepass_alpha, world_vertex_coords;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_nearest, repeat_enable;
uniform ivec2 albedo_texture_size;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_nearest, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_nearest, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

group_uniforms wind;
uniform sampler2D noise_tex;
uniform float wind_speed = 0.1;
uniform float wind_strength = 0.2;

group_uniforms player_avoidance;
uniform vec3 player_pos;
uniform float min_distance = 1.0;
uniform float strength = 0.2;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
	VERTEX.y += 0.5;
	
	// wind ged√∂ns
	float offset = TIME * wind_speed;
	float noise = texture(noise_tex, NODE_POSITION_WORLD.xz - offset).r;
	noise -= 0.5;
	noise *= wind_strength;
	
	VERTEX.x += noise * length(VERTEX.y - NODE_POSITION_WORLD.y);
	
	// player avoidance
	vec3 player_position = player_pos * 2.0; // idfk warum
	float dis = distance(player_position, NODE_POSITION_WORLD + VERTEX);
	if (dis <= min_distance) {
		float factor = (1.0 - (dis / min_distance));
		factor = smoothstep(0.0, 1.0, factor);
		VERTEX.y -= factor * min_distance * strength;
		
		vec2 direction = (NODE_POSITION_WORLD + VERTEX).xz - player_position.xz;
		vec2 push_direction = normalize(direction);
		float push_strength = (min_distance - dis) / min_distance;
		VERTEX.xz += push_direction * push_strength * strength * 2.0; //
	}
	
}


void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	ALPHA *= albedo.a * albedo_tex.a;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_dwd0w"]
frequency = 0.005
fractal_octaves = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_iovlq"]
noise = SubResource("FastNoiseLite_dwd0w")
seamless = true

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bx5gm"]
render_priority = 0
shader = SubResource("Shader_iovlq")
shader_parameter/albedo = Color(0.26485425, 0.57982904, 0.3333893, 1)
shader_parameter/texture_albedo = ExtResource("1_dwd0w")
shader_parameter/albedo_texture_size = Vector2i(32, 32)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = Vector4(1, 0, 0, 0)
shader_parameter/specular = 0.0
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/noise_tex = SubResource("NoiseTexture2D_iovlq")
shader_parameter/wind_speed = 0.1
shader_parameter/wind_strength = 0.5
shader_parameter/player_pos = Vector3(0, 0, 0)
shader_parameter/min_distance = 2.0
shader_parameter/strength = 0.2

[sub_resource type="RibbonTrailMesh" id="RibbonTrailMesh_jci4i"]
material = SubResource("ShaderMaterial_bx5gm")
sections = 2
section_length = 0.5

[node name="GrassFoliage" type="Node3D"]
script = ExtResource("1_iovlq")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("RibbonTrailMesh_jci4i")
